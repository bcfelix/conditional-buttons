/*!
* jQuery Conditional Buttons v1.0
* By: Felix Lau
* Date: 2014-10-22
* Dependencies: contextual-eval.js (optional - enables contextual conditions) (https://github.com/bcfelix/contextual-eval)
*/
!function($){var buttons={};$.conditionalbuttons=function(){return this},$.conditionalbuttons.add=function(selector,condition,activeCallback,disableCallback){var targets=$(selector).attr("disabled","disabled");targets.each(function(idx,elm){var target=$(elm),btn=buttons[target.data("cbtnid")];if(btn)btn.conditions.push(condition),btn.condition="("+btn.conditions.join(") || (")+")";else{var cbtnid="_"+Math.random().toString(36).substr(2,9);btn={element:target,conditions:[condition],condition:"("+condition+")",activeCallbacks:[],disableCallbacks:[]},buttons[cbtnid]=btn,target.bind("conditionchanged",function(e,c){var elm=buttons[$(this).data("cbtnid")];if("function"==typeof ceval?ceval(elm.condition,c):eval(elm.condition)){$(this).removeAttr("disabled");for(var i=0,j=btn.activeCallbacks.length;j>i;i++)btn.activeCallbacks[i].apply(this,[$(this)])}else{$(this).attr("disabled","disabled");for(var i=0,j=btn.disableCallbacks.length;j>i;i++)btn.disableCallbacks[i].apply(this,[$(this)])}}).data("cbtnid",cbtnid)}"function"==typeof activeCallback&&btn.activeCallbacks.push(activeCallback),"function"==typeof disableCallback&&btn.disableCallbacks.push(disableCallback)})},$.fn.conditionalbuttons=function(t){var n={condition:!1,activeCallback:null,disableCallback:null};t="string"==typeof t?{condition:t}:t;var i=$.extend({},n,t);$.conditionalbuttons.add(this,i.condition,i.activeCallback,i.disableCallback)},$.conditionalbuttons.trigger=function(t){for(var n in buttons)buttons[n].element.trigger("conditionchanged",[t])}}(jQuery);
